{
  "marquee": {
    "code": "import React, { ComponentPropsWithoutRef, useEffect, useRef } from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface MarqueeProps extends ComponentPropsWithoutRef<'div'> {\n  /**\n   * Optional CSS class name to apply custom styles\n   */\n  className?: string;\n  /**\n   * Whether to reverse the animation direction\n   * @default false\n   */\n  reverse?: boolean;\n  /**\n   * Whether to pause the animation on hover\n   * @default false\n   */\n  pauseOnHover?: boolean;\n  /**\n   * Content to be displayed in the marquee\n   */\n  children: React.ReactNode;\n  /**\n   * Whether to animate vertically instead of horizontally\n   * @default false\n   */\n  vertical?: boolean;\n  /**\n   * Number of times to repeat the content\n   * @default 4\n   */\n  repeat?: number;\n  /**\n   * If true, automatically repeats children enough to fill the visible area\n   */\n  autoFill?: boolean;\n  /**\n   * ARIA label for accessibility\n   */\n  ariaLabel?: string;\n  /**\n   * ARIA live region politeness\n   */\n  ariaLive?: 'off' | 'polite' | 'assertive';\n  /**\n   * ARIA role\n   */\n  ariaRole?: string;\n  /**\n   * Called when marquee animation starts\n   */\n  onStart?: () => void;\n  /**\n   * Called when marquee animation ends (one full cycle)\n   */\n  onEnd?: () => void;\n  /**\n   * Called when marquee is paused\n   */\n  onPause?: () => void;\n  /**\n   * Called when marquee resumes\n   */\n  onResume?: () => void;\n}\n\nexport function Marquee({\n  className,\n  reverse = false,\n  pauseOnHover = false,\n  children,\n  vertical = false,\n  repeat = 4,\n  ariaLabel,\n  ariaLive = 'off',\n  ariaRole = 'marquee',\n  onStart,\n  onEnd,\n  onPause,\n  onResume,\n  ...props\n}: MarqueeProps) {\n  const marqueeRef = useRef<HTMLDivElement>(null);\n  // Animation event handlers\n  useEffect(() => {\n    if (!marqueeRef.current) return;\n    const el = marqueeRef.current as HTMLElement;\n    let started = false;\n    let paused = false;\n    const handleAnimationStart = () => {\n      if (!started) {\n        started = true;\n        onStart?.();\n      }\n    };\n    const handleAnimationIteration = () => {\n      onEnd?.();\n    };\n    const handlePause = () => {\n      if (!paused) {\n        paused = true;\n        onPause?.();\n      }\n    };\n    const handleResume = () => {\n      if (paused) {\n        paused = false;\n        onResume?.();\n      }\n    };\n    el.addEventListener('animationstart', handleAnimationStart);\n    el.addEventListener('animationiteration', handleAnimationIteration);\n    el.addEventListener('animationpause', handlePause);\n    el.addEventListener('animationresume', handleResume);\n    return () => {\n      el.removeEventListener('animationstart', handleAnimationStart);\n      el.removeEventListener('animationiteration', handleAnimationIteration);\n      el.removeEventListener('animationpause', handlePause);\n      el.removeEventListener('animationresume', handleResume);\n    };\n  }, [onStart, onEnd, onPause, onResume]);\n\n  return (\n    <div\n      {...props}\n      ref={marqueeRef}\n      data-slot=\"marquee\"\n      className={cn(\n        'group flex overflow-hidden p-2 [--duration:40s] [--gap:1rem] [gap:var(--gap)]',\n        {\n          'flex-row': !vertical,\n          'flex-col': vertical,\n        },\n        className,\n      )}\n      aria-label={ariaLabel}\n      aria-live={ariaLive}\n      role={ariaRole}\n      tabIndex={0}\n    >\n      {React.useMemo(\n        () => (\n          <>\n            {Array.from({ length: repeat }, (_, i) => (\n              <div\n                key={i}\n                className={cn(\n                  !vertical\n                    ? 'flex-row [gap:var(--gap)]'\n                    : 'flex-col [gap:var(--gap)]',\n                  'flex shrink-0 justify-around',\n                  !vertical && 'animate-marquee flex-row',\n                  vertical && 'animate-marquee-vertical flex-col',\n                  pauseOnHover && 'group-hover:[animation-play-state:paused]',\n                  reverse && '[animation-direction:reverse]',\n                )}\n              >\n                {children}\n              </div>\n            ))}\n          </>\n        ),\n        [repeat, children, vertical, pauseOnHover, reverse],\n      )}\n    </div>\n  );\n}\n",
    "highlightedCode": "<pre class=\"shiki github-dark-default\" style=\"background-color:#0d1117;color:#e6edf3\" tabindex=\"0\"><code data-line-numbers=\"\"><span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> React, { ComponentPropsWithoutRef, useEffect, useRef } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> 'react'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">import</span><span style=\"color:#E6EDF3\"> { cn } </span><span style=\"color:#FF7B72\">from</span><span style=\"color:#A5D6FF\"> '@/lib/utils'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">interface</span><span style=\"color:#FFA657\"> MarqueeProps</span><span style=\"color:#FF7B72\"> extends</span><span style=\"color:#79C0FF\"> ComponentPropsWithoutRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#A5D6FF\">'div'</span><span style=\"color:#E6EDF3\">> {</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Optional CSS class name to apply custom styles</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Whether to reverse the animation direction</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * </span><span style=\"color:#FF7B72\">@default</span><span style=\"color:#E6EDF3\"> false</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  reverse</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Whether to pause the animation on hover</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * </span><span style=\"color:#FF7B72\">@default</span><span style=\"color:#E6EDF3\"> false</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  pauseOnHover</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Content to be displayed in the marquee</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> React</span><span style=\"color:#E6EDF3\">.</span><span style=\"color:#FFA657\">ReactNode</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Whether to animate vertically instead of horizontally</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * </span><span style=\"color:#FF7B72\">@default</span><span style=\"color:#E6EDF3\"> false</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  vertical</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Number of times to repeat the content</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * </span><span style=\"color:#FF7B72\">@default</span><span style=\"color:#E6EDF3\"> 4</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  repeat</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> number</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * If true, automatically repeats children enough to fill the visible area</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  autoFill</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> boolean</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * ARIA label for accessibility</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  ariaLabel</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * ARIA live region politeness</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  ariaLive</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#A5D6FF\"> 'off'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'polite'</span><span style=\"color:#FF7B72\"> |</span><span style=\"color:#A5D6FF\"> 'assertive'</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * ARIA role</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  ariaRole</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#79C0FF\"> string</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Called when marquee animation starts</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onStart</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Called when marquee animation ends (one full cycle)</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onEnd</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Called when marquee is paused</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onPause</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  /**</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   * Called when marquee resumes</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">   */</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  onResume</span><span style=\"color:#FF7B72\">?:</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#79C0FF\"> void</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">export</span><span style=\"color:#FF7B72\"> function</span><span style=\"color:#D2A8FF\"> Marquee</span><span style=\"color:#E6EDF3\">({</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  className</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  reverse</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  pauseOnHover</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  children</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  vertical</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  repeat</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#79C0FF\"> 4</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  ariaLabel</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  ariaLive</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'off'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  ariaRole</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#A5D6FF\"> 'marquee'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onStart</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onEnd</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onPause</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFA657\">  onResume</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  ...</span><span style=\"color:#FFA657\">props</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span><span style=\"color:#FF7B72\">:</span><span style=\"color:#FFA657\"> MarqueeProps</span><span style=\"color:#E6EDF3\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  const</span><span style=\"color:#79C0FF\"> marqueeRef</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#D2A8FF\"> useRef</span><span style=\"color:#E6EDF3\">&#x3C;</span><span style=\"color:#FFA657\">HTMLDivElement</span><span style=\"color:#E6EDF3\">>(</span><span style=\"color:#79C0FF\">null</span><span style=\"color:#E6EDF3\">);</span></span>\n<span class=\"line\"><span style=\"color:#8B949E\">  // Animation event handlers</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">  useEffect</span><span style=\"color:#E6EDF3\">(() </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">marqueeRef.current) </span><span style=\"color:#FF7B72\">return</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#79C0FF\"> el</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> marqueeRef.current </span><span style=\"color:#FF7B72\">as</span><span style=\"color:#FFA657\"> HTMLElement</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    let</span><span style=\"color:#E6EDF3\"> started </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    let</span><span style=\"color:#E6EDF3\"> paused </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#D2A8FF\"> handleAnimationStart</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">started) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        started </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        onStart</span><span style=\"color:#E6EDF3\">?.();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#D2A8FF\"> handleAnimationIteration</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">      onEnd</span><span style=\"color:#E6EDF3\">?.();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#D2A8FF\"> handlePause</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (</span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">paused) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        paused </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> true</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        onPause</span><span style=\"color:#E6EDF3\">?.();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    const</span><span style=\"color:#D2A8FF\"> handleResume</span><span style=\"color:#FF7B72\"> =</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      if</span><span style=\"color:#E6EDF3\"> (paused) {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        paused </span><span style=\"color:#FF7B72\">=</span><span style=\"color:#79C0FF\"> false</span><span style=\"color:#E6EDF3\">;</span></span>\n<span class=\"line\"><span style=\"color:#D2A8FF\">        onResume</span><span style=\"color:#E6EDF3\">?.();</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      }</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    el.</span><span style=\"color:#D2A8FF\">addEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'animationstart'</span><span style=\"color:#E6EDF3\">, handleAnimationStart);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    el.</span><span style=\"color:#D2A8FF\">addEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'animationiteration'</span><span style=\"color:#E6EDF3\">, handleAnimationIteration);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    el.</span><span style=\"color:#D2A8FF\">addEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'animationpause'</span><span style=\"color:#E6EDF3\">, handlePause);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    el.</span><span style=\"color:#D2A8FF\">addEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'animationresume'</span><span style=\"color:#E6EDF3\">, handleResume);</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">    return</span><span style=\"color:#E6EDF3\"> () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      el.</span><span style=\"color:#D2A8FF\">removeEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'animationstart'</span><span style=\"color:#E6EDF3\">, handleAnimationStart);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      el.</span><span style=\"color:#D2A8FF\">removeEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'animationiteration'</span><span style=\"color:#E6EDF3\">, handleAnimationIteration);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      el.</span><span style=\"color:#D2A8FF\">removeEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'animationpause'</span><span style=\"color:#E6EDF3\">, handlePause);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      el.</span><span style=\"color:#D2A8FF\">removeEventListener</span><span style=\"color:#E6EDF3\">(</span><span style=\"color:#A5D6FF\">'animationresume'</span><span style=\"color:#E6EDF3\">, handleResume);</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    };</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  }, [onStart, onEnd, onPause, onResume]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">  return</span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {...</span><span style=\"color:#E6EDF3\">props</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      ref</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">marqueeRef</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      data-slot</span><span style=\"color:#FF7B72\">=</span><span style=\"color:#A5D6FF\">\"marquee\"</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">        'group flex overflow-hidden p-2 [--duration:40s] [--gap:1rem] [gap:var(--gap)]'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        {</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'flex-row'</span><span style=\"color:#E6EDF3\">: </span><span style=\"color:#FF7B72\">!</span><span style=\"color:#E6EDF3\">vertical,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">          'flex-col'</span><span style=\"color:#E6EDF3\">: vertical,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        },</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        className,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      aria-label</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">ariaLabel</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      aria-live</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">ariaLive</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      role</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">ariaRole</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">      tabIndex</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#79C0FF\">0</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">      {</span><span style=\"color:#E6EDF3\">React.</span><span style=\"color:#D2A8FF\">useMemo</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        () </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">            {</span><span style=\"color:#E6EDF3\">Array.</span><span style=\"color:#D2A8FF\">from</span><span style=\"color:#E6EDF3\">({ length: repeat }, (</span><span style=\"color:#FFA657\">_</span><span style=\"color:#E6EDF3\">, </span><span style=\"color:#FFA657\">i</span><span style=\"color:#E6EDF3\">) </span><span style=\"color:#FF7B72\">=></span><span style=\"color:#E6EDF3\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;</span><span style=\"color:#7EE787\">div</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                key</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#E6EDF3\">i</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#79C0FF\">                className</span><span style=\"color:#FF7B72\">={</span><span style=\"color:#D2A8FF\">cn</span><span style=\"color:#E6EDF3\">(</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  !</span><span style=\"color:#E6EDF3\">vertical</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    ?</span><span style=\"color:#A5D6FF\"> 'flex-row [gap:var(--gap)]'</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                    :</span><span style=\"color:#A5D6FF\"> 'flex-col [gap:var(--gap)]'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#A5D6FF\">                  'flex shrink-0 justify-around'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                  !</span><span style=\"color:#E6EDF3\">vertical </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'animate-marquee flex-row'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  vertical </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'animate-marquee-vertical flex-col'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  pauseOnHover </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> 'group-hover:[animation-play-state:paused]'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                  reverse </span><span style=\"color:#FF7B72\">&#x26;&#x26;</span><span style=\"color:#A5D6FF\"> '[animation-direction:reverse]'</span><span style=\"color:#E6EDF3\">,</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">                )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              ></span></span>\n<span class=\"line\"><span style=\"color:#FF7B72\">                {</span><span style=\"color:#E6EDF3\">children</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">              &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">            ))</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">          &#x3C;/></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">        [repeat, children, vertical, pauseOnHover, reverse],</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">      )</span><span style=\"color:#FF7B72\">}</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">    &#x3C;/</span><span style=\"color:#7EE787\">div</span><span style=\"color:#E6EDF3\">></span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">  );</span></span>\n<span class=\"line\"><span style=\"color:#E6EDF3\">}</span></span>\n<span class=\"line\"></span></code></pre>",
    "sourcePath": "registry/default/ui",
    "filePath": "registry/default/ui/marquee.tsx",
    "timestamp": "2025-05-26T03:33:42.977Z"
  }
}
