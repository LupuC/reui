{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scroll-area-default",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "tailwind-merge",
    "@radix-ui/react-avatar",
    "class-variance-authority",
    "@radix-ui/react-slot",
    "lucide-react",
    "@radix-ui/react-scroll-area"
  ],
  "registryDependencies": [
    "https://reui.io/r/avatar.json",
    "https://reui.io/r/badge.json",
    "https://reui.io/r/button.json",
    "https://reui.io/r/card.json",
    "https://reui.io/r/scroll-area.json"
  ],
  "files": [
    {
      "path": "registry/default/components/scroll-area/default.tsx",
      "content": "'use client';\n\nimport Link from 'next/link';\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from '@/registry/default/ui/avatar';\nimport { Badge } from '@/registry/default/ui/badge';\nimport { Button } from '@/registry/default/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n  CardHeading,\n  CardTitle,\n  CardToolbar,\n} from '@/registry/default/ui/card';\nimport { ScrollArea } from '@/registry/default/ui/scroll-area';\nimport { Settings } from 'lucide-react';\n\n// User data\nconst users = [\n  {\n    id: '1',\n    name: 'Kathryn Campbell',\n    availability: 'online',\n    avatar: '1.png',\n    status: 'active',\n    email: 'kathryn@apple.com',\n  },\n  {\n    id: '2',\n    name: 'Robert Smith',\n    availability: 'away',\n    avatar: '2.png',\n    status: 'inactive',\n    email: 'robert@openai.com',\n  },\n  {\n    id: '3',\n    name: 'Sophia Johnson',\n    availability: 'busy',\n    avatar: '3.png',\n    status: 'active',\n    email: 'sophia@meta.com',\n  },\n  {\n    id: '4',\n    name: 'Lucas Walker',\n    availability: 'offline',\n    avatar: '4.png',\n    status: 'inactive',\n    email: 'lucas@tesla.com',\n  },\n  {\n    id: '5',\n    name: 'Emily Davis',\n    availability: 'online',\n    avatar: '5.png',\n    status: 'active',\n    email: 'emily@sap.com',\n  },\n  {\n    id: '6',\n    name: 'Michael Brown',\n    availability: 'online',\n    avatar: '6.png',\n    status: 'active',\n    email: 'michael@amazon.com',\n  },\n  {\n    id: '7',\n    name: 'Jessica Lee',\n    availability: 'away',\n    avatar: '7.png',\n    status: 'inactive',\n    email: 'jessica@google.com',\n  },\n  {\n    id: '8',\n    name: 'David Wilson',\n    availability: 'busy',\n    avatar: '8.png',\n    status: 'active',\n    email: 'david@microsoft.com',\n  },\n  {\n    id: '9',\n    name: 'Sarah Taylor',\n    availability: 'offline',\n    avatar: '9.png',\n    status: 'inactive',\n    email: 'sarah@ibm.com',\n  },\n  {\n    id: '10',\n    name: 'James Anderson',\n    availability: 'online',\n    avatar: '10.png',\n    status: 'active',\n    email: 'james@oracle.com',\n  },\n];\n\nexport default function CardDemo() {\n  return (\n    <Card className=\"w-[400px]\">\n      <CardHeader>\n        <CardHeading>\n          <CardTitle>Recent Users</CardTitle>\n        </CardHeading>\n        <CardToolbar>\n          <Button mode=\"icon\" variant=\"outline\" size=\"sm\">\n            <Settings />\n          </Button>\n        </CardToolbar>\n      </CardHeader>\n      <CardContent className=\"py-3 pe-1.5\">\n        <ScrollArea className=\"h-[300px] pe-3.5\">\n          {users.map((user) => {\n            return (\n              <div\n                key={user.id}\n                className=\"flex items-center justify-between gap-2 py-2 border-b border-dashed last:border-none\"\n              >\n                {/* Left: Avatar and User Info */}\n                <div className=\"flex items-center gap-3\">\n                  <Avatar className=\"size-8\">\n                    <AvatarImage\n                      src={`/media/avatars/${user.avatar}`}\n                      alt={user.name}\n                    />\n                    <AvatarFallback>N</AvatarFallback>\n                  </Avatar>\n                  <div>\n                    <Link\n                      href=\"#\"\n                      className=\"text-sm font-medium text-foreground hover:text-primary\"\n                    >\n                      {user.name}\n                    </Link>\n                    <div className=\"text-sm font-normal text-muted-foreground\">\n                      {user.email}\n                    </div>\n                  </div>\n                </div>\n                {/* Right: Status Badge */}\n                <Badge\n                  appearance=\"outline\"\n                  variant={user.status === 'active' ? 'success' : 'secondary'}\n                >\n                  {user.status.charAt(0).toUpperCase() + user.status.slice(1)}\n                </Badge>\n              </div>\n            );\n          })}\n        </ScrollArea>\n      </CardContent>\n      <CardFooter className=\"justify-center\">\n        <Button mode=\"link\" underlined=\"dashed\">\n          <Link href=\"#\">Learn more</Link>\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/default/ui/avatar.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\nimport { cva, VariantProps } from 'class-variance-authority';\n\nconst avatarStatusVariants = cva(\n  'flex items-center rounded-full size-2 border-2 border-background',\n  {\n    variants: {\n      variant: {\n        online: 'bg-green-600',\n        offline: 'bg-zinc-600 dark:bg-zinc-300',\n        busy: 'bg-yellow-600',\n        away: 'bg-blue-600',\n      },\n    },\n    defaultVariants: {\n      variant: 'online',\n    },\n  },\n);\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn('relative flex shrink-0 size-10', className)}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>) {\n  return (\n    <div className={cn('relative overflow-hidden rounded-full', className)}>\n      <AvatarPrimitive.Image\n        data-slot=\"avatar-image\"\n        className={cn('aspect-square h-full w-full')}\n        {...props}\n      />\n    </div>\n  );\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        'flex h-full w-full items-center justify-center rounded-full border border-border bg-accent text-accent-foreground text-xs',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarIndicator({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      data-slot=\"avatar-indicator\"\n      className={cn(\n        'absolute flex size-6 items-center justify-center',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarStatus({\n  className,\n  variant,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> &\n  VariantProps<typeof avatarStatusVariants>) {\n  return (\n    <div\n      data-slot=\"avatar-status\"\n      className={cn(avatarStatusVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n  AvatarIndicator,\n  AvatarStatus,\n  avatarStatusVariants,\n};\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    },
    {
      "path": "registry/default/ui/badge.tsx",
      "content": "import * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {\n  asChild?: boolean;\n  dotClassName?: string;\n  disabled?: boolean;\n}\n\nexport interface BadgeButtonProps\n  extends React.ButtonHTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeButtonVariants> {\n  asChild?: boolean;\n}\n\nexport type BadgeDotProps = React.HTMLAttributes<HTMLSpanElement>;\n\nconst badgeVariants = cva(\n  'inline-flex items-center justify-center border font-medium focus:outline-hidden focus:ring-2 focus:ring-ring focus:ring-offset-2 [&_svg]:-ms-px [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        primary: 'bg-primary text-primary-foreground',\n        secondary: 'bg-secondary text-secondary-foreground',\n        success: 'bg-green-500 text-white',\n        warning: 'bg-yellow-500 text-white',\n        info: 'bg-violet-500 text-white',\n        mono: 'bg-zinc-950 text-white dark:bg-zinc-300 dark:text-black',\n        destructive: 'bg-destructive text-destructive-foreground',\n      },\n      appearance: {\n        solid: 'border-transparent',\n        outline: '',\n        light: '',\n        stroke: 'bg-transparent border border-border text-secondary-foreground',\n        ghost: 'border-transparent bg-transparent',\n      },\n      disabled: {\n        true: 'opacity-50 pointer-events-none',\n      },\n      size: {\n        lg: 'rounded-md px-[0.5rem] h-7 min-w-7 gap-1.5 text-xs [&_svg]:size-3.5',\n        md: 'rounded-md px-[0.45rem] h-6 min-w-6 gap-1.5 text-xs [&_svg]:size-3.5 ',\n        sm: 'rounded-sm px-[0.325rem] h-5 min-w-5 gap-1 text-[0.6875rem] leading-[0.75rem] [&_svg]:size-3',\n        xs: 'rounded-sm px-[0.25rem] h-4 min-w-4 gap-1 text-[0.625rem] leading-[0.5rem] [&_svg]:size-3',\n      },\n      shape: {\n        default: '',\n        circle: 'rounded-full',\n      },\n    },\n    compoundVariants: [\n      {\n        variant: 'primary',\n        appearance: 'outline',\n        className: 'bg-primary/10 border-primary/10 text-primary',\n      },\n      {\n        variant: 'secondary',\n        appearance: 'outline',\n        className:\n          'bg-secondary dark:bg-secondary/50 border-border text-secondary-foreground',\n      },\n      {\n        variant: 'success',\n        appearance: 'outline',\n        className:\n          'border bg-green-100 text-green-700 border-green-200 dark:text-green-600 dark:bg-green-950/50 dark:border-green-950',\n      },\n      {\n        variant: 'warning',\n        appearance: 'outline',\n        className:\n          'border bg-yellow-100 text-yellow-700 border-yellow-200 dark:text-yellow-600 dark:bg-yellow-950/50 dark:border-yellow-950',\n      },\n      {\n        variant: 'info',\n        appearance: 'outline',\n        className:\n          'border bg-violet-100 text-violet-700 border-violet-200 dark:text-violet-600 dark:bg-violet-950/50 dark:border-violet-950',\n      },\n      {\n        variant: 'mono',\n        appearance: 'outline',\n        className:\n          'bg-zinc-100 dark:bg-zinc-300/10 border-zinc-300 dark:border-zinc-300/10 text-zinc-950 dark:text-zinc-200',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'outline',\n        className: 'bg-destructive/10 border-destructive/10 text-destructive',\n      },\n\n      {\n        variant: 'primary',\n        appearance: 'light',\n        className: 'bg-primary/10 text-primary',\n      },\n      {\n        variant: 'secondary',\n        appearance: 'light',\n        className:\n          'bg-secondary dark:bg-secondary/50 text-secondary-foreground',\n      },\n      {\n        variant: 'success',\n        appearance: 'light',\n        className:\n          'border bg-green-100 text-green-700 dark:text-green-600 dark:bg-green-950/50',\n      },\n      {\n        variant: 'warning',\n        appearance: 'light',\n        className:\n          'border bg-yellow-100 text-yellow-700 dark:text-yellow-600 dark:bg-yellow-950/50',\n      },\n      {\n        variant: 'info',\n        appearance: 'light',\n        className:\n          'border bg-violet-100 text-violet-700 dark:text-violet-600 dark:bg-violet-950/50',\n      },\n      {\n        variant: 'mono',\n        appearance: 'light',\n        className:\n          'bg-zinc-200 dark:bg-zinc-300/10 text-zinc-950 dark:text-zinc-200',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'light',\n        className: 'bg-destructive/10 text-destructive',\n      },\n\n      {\n        variant: 'primary',\n        appearance: 'ghost',\n        className: 'text-primary',\n      },\n      {\n        variant: 'secondary',\n        appearance: 'ghost',\n        className: 'text-secondary-foreground',\n      },\n      {\n        variant: 'success',\n        appearance: 'ghost',\n        className: 'text-green-500',\n      },\n      {\n        variant: 'warning',\n        appearance: 'ghost',\n        className: 'text-yellow-500',\n      },\n      { variant: 'info', appearance: 'ghost', className: 'text-violet-500' },\n      { variant: 'mono', appearance: 'ghost', className: 'text-foreground' },\n      {\n        variant: 'destructive',\n        appearance: 'ghost',\n        className: 'text-destructive',\n      },\n\n      { size: 'lg', appearance: 'ghost', className: 'px-0' },\n      { size: 'md', appearance: 'ghost', className: 'px-0' },\n      { size: 'sm', appearance: 'ghost', className: 'px-0' },\n      { size: 'xs', appearance: 'ghost', className: 'px-0' },\n    ],\n    defaultVariants: {\n      variant: 'secondary',\n      appearance: 'solid',\n      size: 'md',\n    },\n  },\n);\n\nconst badgeButtonVariants = cva(\n  'cursor-pointer transition-all inline-flex items-center justify-center leading-none size-3.5 [&>svg]:opacity-100! [&>svg]:size-3.5 p-0 rounded-md -me-0.5 opacity-60 hover:opacity-100',\n  {\n    variants: {\n      variant: {\n        default: '',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\nfunction Badge({\n  className,\n  variant,\n  size,\n  appearance,\n  shape,\n  asChild = false,\n  disabled,\n  ...props\n}: BadgeProps) {\n  const Comp = asChild ? Slot : 'span';\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(\n        badgeVariants({ variant, size, appearance, shape, disabled }),\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction BadgeButton({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: BadgeButtonProps) {\n  const Comp = asChild ? Slot : 'span';\n  return (\n    <Comp\n      data-slot=\"badge-button\"\n      className={cn(badgeButtonVariants({ variant, className }))}\n      role=\"button\"\n      {...props}\n    />\n  );\n}\n\nfunction BadgeDot({ className, ...props }: BadgeDotProps) {\n  return (\n    <span\n      data-slot=\"badge-dot\"\n      className={cn(\n        'size-1.5 rounded-full bg-[currentColor] opacity-75',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Badge, BadgeButton, BadgeDot, badgeVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/button.tsx",
      "content": "import * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { ChevronDown, LucideIcon } from 'lucide-react';\n\nconst buttonVariants = cva(\n  'cursor-pointer group whitespace-nowrap focus-visible:outline-hidden inline-flex items-center justify-center has-data-[arrow=true]:justify-between whitespace-nowrap text-sm font-medium ring-offset-background transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-60 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        primary:\n          'bg-primary text-primary-foreground hover:bg-primary/90 data-[state=open]:bg-primary/90',\n        mono: 'bg-zinc-950 text-white dark:bg-zinc-300 dark:text-black hover:bg-zinc-950/90 dark:hover:bg-zinc-300/90 data-[state=open]:bg-zinc-950/90 dark:data-[state=open]:bg-zinc-300/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90 data-[state=open]:bg-destructive/90',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/90 data-[state=open]:bg-secondary/90',\n        outline:\n          'bg-background text-accent-foreground border border-input hover:bg-accent data-[state=open]:bg-accent',\n        dashed:\n          'text-accent-foreground border border-input border-dashed bg-background hover:bg-accent hover:text-accent-foreground data-[state=open]:text-accent-foreground',\n        ghost:\n          'text-accent-foreground hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\n        dim: 'text-muted-foreground hover:text-foreground data-[state=open]:text-foreground',\n        foreground: '',\n        inverse: '',\n      },\n      appearance: {\n        default: '',\n        ghost: '',\n      },\n      underline: {\n        solid: '',\n        dashed: '',\n      },\n      underlined: {\n        solid: '',\n        dashed: '',\n      },\n      size: {\n        lg: 'h-10 rounded-md px-4 text-sm gap-1.5 [&_svg:not([class*=size-])]:size-4',\n        md: 'h-8.5 rounded-md px-3 gap-1.5 text-[0.8125rem] leading-(--text-sm--line-height) [&_svg:not([class*=size-])]:size-4',\n        sm: 'h-7 rounded-md px-2.5 gap-1.25 text-xs [&_svg:not([class*=size-])]:size-3.5',\n      },\n      autoHeight: {\n        true: '',\n        false: '',\n      },\n      shape: {\n        default: '',\n        circle: 'rounded-full',\n      },\n      mode: {\n        default:\n          'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        icon: 'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        link: 'text-primary h-auto p-0 bg-transparent rounded-none hover:bg-transparent data-[state=open]:bg-transparent',\n        input: `\n            justify-start font-normal hover:bg-background [&_svg]:transition-colors [&_svg]:hover:text-foreground data-[state=open]:bg-background \n            focus-visible:border-ring focus-visible:outline-hidden focus-visible:ring-[3px] focus-visible:ring-ring/30 \n            [[data-state=open]>&]:border-ring [[data-state=open]>&]:outline-hidden [[data-state=open]>&]:ring-[3px] \n            [[data-state=open]>&]:ring-ring/30 \n            aria-invalid:border-destructive/60 aria-invalid:ring-destructive/10 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/20\n            in-data-[invalid=true]:border-destructive/60 in-data-[invalid=true]:ring-destructive/10  dark:in-data-[invalid=true]:border-destructive dark:in-data-[invalid=true]:ring-destructive/20\n          `,\n      },\n      placeholder: {\n        true: 'text-muted-foreground',\n        false: '',\n      },\n    },\n    compoundVariants: [\n      // Icons opacity for default mode\n      {\n        variant: 'ghost',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-])]:opacity-60',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-])]:opacity-60',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        className: '[&_svg:not([role=img]):not([class*=text-])]:opacity-60',\n      },\n\n      // Icons opacity for default mode\n      {\n        variant: 'outline',\n        mode: 'input',\n        className: '[&_svg:not([role=img]):not([class*=text-])]:opacity-60',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        className: '[&_svg:not([role=img]):not([class*=text-])]:opacity-60',\n      },\n\n      // Auto height\n      {\n        size: 'md',\n        autoHeight: true,\n        className: 'h-auto min-h-8.5',\n      },\n      {\n        size: 'sm',\n        autoHeight: true,\n        className: 'h-auto min-h-7',\n      },\n      {\n        size: 'lg',\n        autoHeight: true,\n        className: 'h-auto min-h-10',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'default',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Shadow support\n      {\n        variant: 'primary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'mono',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'secondary',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'outline',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'dashed',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n      {\n        variant: 'destructive',\n        mode: 'icon',\n        appearance: 'default',\n        className: 'shadow-xs shadow-black/5',\n      },\n\n      // Link\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'primary',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-primary hover:text-primary/90 [&_svg]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'inverse',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-inherit [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underline: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 hover:underline hover:underline-offset-4 hover:decoration-dashed decoration-1',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'solid',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-solid',\n      },\n      {\n        variant: 'foreground',\n        mode: 'link',\n        underlined: 'dashed',\n        className:\n          'font-medium text-foreground [&_svg:not([role=img]):not([class*=text-])]:opacity-60 underline underline-offset-4 decoration-dashed decoration-1',\n      },\n\n      // Ghost\n      {\n        variant: 'primary',\n        appearance: 'ghost',\n        className:\n          'bg-transparent text-primary/90 hover:bg-primary/5 data-[state=open]:bg-primary/5',\n      },\n      {\n        variant: 'destructive',\n        appearance: 'ghost',\n        className:\n          'bg-transparent text-destructive/90 hover:bg-destructive/5 data-[state=open]:bg-destructive/5',\n      },\n      {\n        variant: 'ghost',\n        mode: 'icon',\n        className: 'text-muted-foreground',\n      },\n\n      // Size\n      {\n        size: 'sm',\n        mode: 'icon',\n        className: 'w-7 h-7 p-0 [[&_svg:not([class*=size-])]:size-3.5',\n      },\n      {\n        size: 'md',\n        mode: 'icon',\n        className: 'w-8.5 h-8.5 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n      {\n        size: 'lg',\n        mode: 'icon',\n        className: 'w-10 h-10 p-0 [&_svg:not([class*=size-])]:size-4',\n      },\n\n      // Input mode\n      {\n        mode: 'input',\n        placeholder: true,\n        variant: 'outline',\n        className: 'font-normal text-muted-foreground',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'sm',\n        className: 'gap-1.25',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'md',\n        className: 'gap-1.5',\n      },\n      {\n        mode: 'input',\n        variant: 'outline',\n        size: 'lg',\n        className: 'gap-1.5',\n      },\n    ],\n    defaultVariants: {\n      variant: 'primary',\n      mode: 'default',\n      size: 'md',\n      shape: 'default',\n      appearance: 'default',\n    },\n  },\n);\n\nfunction Button({\n  className,\n  selected,\n  variant,\n  shape,\n  appearance,\n  mode,\n  size,\n  autoHeight,\n  underlined,\n  underline,\n  asChild = false,\n  placeholder = false,\n  ...props\n}: React.ComponentProps<'button'> &\n  VariantProps<typeof buttonVariants> & {\n    selected?: boolean;\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? Slot : 'button';\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(\n        buttonVariants({\n          variant,\n          size,\n          shape,\n          appearance,\n          mode,\n          autoHeight,\n          placeholder,\n          underlined,\n          underline,\n          className,\n        }),\n        asChild && props.disabled && 'pointer-events-none opacity-50',\n      )}\n      {...(selected && { 'data-state': 'open' })}\n      {...props}\n    />\n  );\n}\n\ninterface ButtonArrowProps extends React.SVGProps<SVGSVGElement> {\n  icon?: LucideIcon; // Allows passing any Lucide icon\n}\n\nfunction ButtonArrow({\n  icon: Icon = ChevronDown,\n  className,\n  ...props\n}: ButtonArrowProps) {\n  return (\n    <Icon\n      data-slot=\"button-arrow\"\n      className={cn('ms-auto -me-1', className)}\n      {...props}\n    />\n  );\n}\n\nexport { Button, ButtonArrow, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/card.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\n// Define CardContext\ntype CardContextType = {\n  variant: 'default' | 'accent';\n};\n\nconst CardContext = React.createContext<CardContextType>({\n  variant: 'default', // Default value\n});\n\n// Hook to use CardContext\nconst useCardContext = () => {\n  const context = React.useContext(CardContext);\n  if (!context) {\n    throw new Error('useCardContext must be used within a Card component');\n  }\n  return context;\n};\n\n// Variants\nconst cardVariants = cva(\n  'flex flex-col items-stretch text-card-foreground rounded-xl',\n  {\n    variants: {\n      variant: {\n        default: 'bg-card border border-border shadow-xs black/5',\n        accent: 'bg-muted shadow-xs p-1',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\nconst cardHeaderVariants = cva(\n  'flex items-center justify-between flex-wrap px-5 min-h-14 gap-2.5',\n  {\n    variants: {\n      variant: {\n        default: 'border-b border-border',\n        accent: '',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\nconst cardContentVariants = cva('grow p-5', {\n  variants: {\n    variant: {\n      default: '',\n      accent: 'bg-card rounded-t-xl [&:last-child]:rounded-b-xl',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\nconst cardTableVariants = cva('grid grow', {\n  variants: {\n    variant: {\n      default: '',\n      accent: 'bg-card rounded-xl',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\nconst cardFooterVariants = cva('flex items-center px-5 min-h-14', {\n  variants: {\n    variant: {\n      default: 'border-t border-border',\n      accent: 'bg-card rounded-b-xl mt-[2px]',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\n// Card Component\nfunction Card({\n  className,\n  variant = 'default',\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof cardVariants>) {\n  return (\n    <CardContext.Provider value={{ variant: variant || 'default' }}>\n      <div\n        data-slot=\"card\"\n        className={cn(cardVariants({ variant }), className)}\n        {...props}\n      />\n    </CardContext.Provider>\n  );\n}\n\n// CardHeader Component\nfunction CardHeader({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  const { variant } = useCardContext();\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(cardHeaderVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\n// CardContent Component\nfunction CardContent({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  const { variant } = useCardContext();\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(cardContentVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\n// CardTable Component\nfunction CardTable({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  const { variant } = useCardContext();\n  return (\n    <div\n      data-slot=\"card-table\"\n      className={cn(cardTableVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\n// CardFooter Component\nfunction CardFooter({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  const { variant } = useCardContext();\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(cardFooterVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\n// Other Components\nfunction CardHeading({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      data-slot=\"card-heading\"\n      className={cn('space-y-1', className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardToolbar({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      data-slot=\"card-toolbar\"\n      className={cn('flex items-center gap-2.5', className)}\n      {...props}\n    />\n  );\n}\n\nfunction CardTitle({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLHeadingElement>) {\n  return (\n    <h3\n      data-slot=\"card-title\"\n      className={cn(\n        'text-base font-semibold leading-none tracking-tight',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction CardDescription({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn('text-sm text-muted-foreground', className)}\n      {...props}\n    />\n  );\n}\n\n// Exports\nexport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardHeading,\n  CardTable,\n  CardTitle,\n  CardToolbar,\n};\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "registry/default/ui/scroll-area.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport * as ScrollAreaPrimitive from '@radix-ui/react-scroll-area';\n\nfunction ScrollArea({\n  className,\n  viewportClassName,\n  children,\n  viewportRef,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root> & {\n  viewportRef?: React.Ref<HTMLDivElement>;\n  viewportClassName?: string;\n}) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn('relative overflow-hidden', className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        ref={viewportRef}\n        className={cn('h-full w-full rounded-[inherit]', viewportClassName)}\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  );\n}\n\nfunction ScrollBar({\n  className,\n  orientation = 'vertical',\n  ...props\n}: React.ComponentPropsWithoutRef<\n  typeof ScrollAreaPrimitive.ScrollAreaScrollbar\n>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        'flex touch-none select-none transition-colors',\n        orientation === 'vertical' &&\n          'h-full w-2 border-l border-l-transparent p-[1px]',\n        orientation === 'horizontal' &&\n          'h-2 flex-col border-t border-t-transparent p-[1px]',\n        className,\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  );\n}\n\nexport { ScrollArea, ScrollBar };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}