{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "table",
  "type": "registry:ui",
  "dependencies": ["clsx", "tailwind-merge"],
  "files": [
    {
      "path": "registry/default/ui/table.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\n\nfunction Table({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLTableElement>) {\n  return (\n    <div data-slot=\"table-wrapper\" className=\"relative w-full overflow-auto\">\n      <table\n        data-slot=\"table\"\n        className={cn(\n          'w-full caption-bottom text-foreground text-sm',\n          className,\n        )}\n        {...props}\n      />\n    </div>\n  );\n}\n\nfunction TableHeader({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLTableSectionElement>) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn('[&_tr]:border-b', className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableBody({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLTableSectionElement>) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn('[&_tr:last-child]:border-0', className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableFooter({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLTableSectionElement>) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        'border-t bg-muted/50 font-medium last:[&>tr]:border-b-0',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableRow({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLTableRowElement>) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        'border-b transition-colors [&:has(td):hover]:bg-muted/50 data-[state=selected]:bg-muted',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableHead({\n  className,\n  ...props\n}: React.ThHTMLAttributes<HTMLTableCellElement>) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        'h-12 px-4 text-left rtl:text-right align-middle font-normal text-muted-foreground [&:has([role=checkbox])]:pe-0',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCell({\n  className,\n  ...props\n}: React.TdHTMLAttributes<HTMLTableCellElement>) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        'p-4 align-middle [&:has([role=checkbox])]:pe-0',\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLTableCaptionElement>) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn('mt-4 text-sm text-muted-foreground', className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n};\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}
