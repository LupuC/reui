{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scroll-area",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-scroll-area",
    "clsx",
    "tailwind-merge",
    "@radix-ui/react-scroll-area"
  ],
  "files": [
    {
      "path": "registry/default/ui/scroll-area.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/registry/default/lib/utils';\nimport * as ScrollAreaPrimitive from '@radix-ui/react-scroll-area';\n\nfunction ScrollArea({\n  className,\n  viewportClassName,\n  children,\n  viewportRef,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root> & {\n  viewportRef?: React.Ref<HTMLDivElement>;\n  viewportClassName?: string;\n}) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn('relative overflow-hidden', className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        ref={viewportRef}\n        className={cn('h-full w-full rounded-[inherit]', viewportClassName)}\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  );\n}\n\nfunction ScrollBar({\n  className,\n  orientation = 'vertical',\n  ...props\n}: React.ComponentPropsWithoutRef<\n  typeof ScrollAreaPrimitive.ScrollAreaScrollbar\n>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        'flex touch-none select-none transition-colors',\n        orientation === 'vertical' &&\n          'h-full w-2 border-l border-l-transparent p-[1px]',\n        orientation === 'horizontal' &&\n          'h-2 flex-col border-t border-t-transparent p-[1px]',\n        className,\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  );\n}\n\nexport { ScrollArea, ScrollBar };\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/default/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Merges Tailwind class names, resolving any conflicts.\n *\n * @param inputs - An array of class names to merge.\n * @returns A string of merged and optimized class names.\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}